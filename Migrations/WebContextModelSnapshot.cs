// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieTheater.Data;

namespace MovieTheater.Migrations
{
    [DbContext(typeof(WebContext))]
    partial class WebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("MovieTheater.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("admin_id");

                    b.Property<string>("AdminName")
                        .HasColumnName("admin_name")
                        .HasMaxLength(20);

                    b.Property<string>("AdminPwd")
                        .HasColumnName("admin_pwd")
                        .HasMaxLength(20);

                    b.HasKey("AdminId");

                    b.ToTable("admin");
                });

            modelBuilder.Entity("MovieTheater.Models.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("MovieActor")
                        .HasColumnName("movie_actor")
                        .HasMaxLength(20);

                    b.Property<int?>("MovieCategoryId")
                        .HasColumnName("movie_category_id");

                    b.Property<int?>("MovieCountryId")
                        .HasColumnName("movie_country_id");

                    b.Property<string>("MovieDescription")
                        .HasColumnName("movie_description")
                        .HasMaxLength(500);

                    b.Property<string>("MovieDirector")
                        .HasColumnName("movie_director")
                        .HasMaxLength(20);

                    b.Property<string>("MovieGrade")
                        .HasColumnName("movie_grade");

                    b.Property<string>("MovieImg")
                        .HasColumnName("movie_img");

                    b.Property<string>("MovieName")
                        .HasColumnName("movie_name")
                        .HasMaxLength(50);

                    b.Property<int>("MoviePrice")
                        .HasColumnName("movie_price");

                    b.HasKey("MovieId");

                    b.HasIndex("MovieCategoryId");

                    b.HasIndex("MovieCountryId");

                    b.ToTable("movie");
                });

            modelBuilder.Entity("MovieTheater.Models.MovieCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category_id");

                    b.Property<string>("CategoryName")
                        .HasColumnName("category_name")
                        .HasMaxLength(50);

                    b.HasKey("CategoryId");

                    b.ToTable("movie_category");
                });

            modelBuilder.Entity("MovieTheater.Models.MovieCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("country_id");

                    b.Property<string>("CountryName")
                        .HasColumnName("country_name")
                        .HasMaxLength(50);

                    b.HasKey("CountryId");

                    b.ToTable("movie_country");
                });

            modelBuilder.Entity("MovieTheater.Models.Movie", b =>
                {
                    b.HasOne("MovieTheater.Models.MovieCategory", "movie_category")
                        .WithMany("movies")
                        .HasForeignKey("MovieCategoryId");

                    b.HasOne("MovieTheater.Models.MovieCountry", "movie_country")
                        .WithMany("movies")
                        .HasForeignKey("MovieCountryId");
                });
#pragma warning restore 612, 618
        }
    }
}
